index,data,expected_status_code,reason
1,"{""billId"": ""%not-sure%""}",2xx,billId=%not-sure% indicates uncertain path parameter requiring dependency resolution.
2,"{""billId"": ""%not-sure%"", ""Skip"": 0, ""Take"": 10}",2xx,billId=%not-sure% indicates uncertain path parameter requiring dependency resolution; Skip and Take are valid integers.
3,"{""billId"": ""%not-sure%"", ""Take"": -1}",2xx,billId=%not-sure% indicates uncertain path parameter requiring dependency resolution; Take is a valid integer (no minimum constraint).
4,"{""billId"": ""%not-sure%""}",2xx,
5,"{""billId"": 0}",4xx,"billId=0 < minimum=1, violating 'minimum'."
6,"{""billId"": ""%not-sure%"", ""Skip"": ""five""}",4xx,Skip has type string but the spec requires integer (type mismatch).
7,"{""billId"": 0, ""Skip"": 10, ""Take"": 10}",4xx,"billId=0 < minimum=1, violating 'minimum'."
8,"{""billId"": 1, ""Skip"": ""ten"", ""Take"": 10}",4xx,Skip has type string but the spec requires integer (type mismatch).
9,"{""billId"": 1, ""Skip"": 10, ""Take"": ""twenty""}",4xx,Take has type string but the spec requires integer (type mismatch).
10,"{""billId"": -5, ""Skip"": ""bad"", ""Take"": 10}",4xx,"billId=-5 < minimum=1, violating 'minimum'; Skip has type string but the spec requires integer (type mismatch)."
11,"{""billId"": ""abc"", ""Skip"": ""none"", ""Take"": ""zero""}",4xx,billId has type string but the spec requires integer (type mismatch); Skip has type string but the spec requires integer (type mismatch); Take has type string but the spec requires integer (type mismatch).
12,"{""billId"": """"}",4xx,
13,"{""billId"": ""123456""}",4xx,
14,"{""billId"": """", ""Skip"": ""123456""}",4xx,
15,"{""billId"": """", ""Take"": ""123456""}",4xx,
16,"{""billId"": ""123456"", ""Skip"": ""123456""}",4xx,
17,"{""billId"": ""123456"", ""Skip"": ""123456"", ""Take"": ""123456""}",4xx,
