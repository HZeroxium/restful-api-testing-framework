{
  "result": {
    "title": "GitLab Groups API",
    "version": "1.0.0",
    "description": "This is a simple API for test"
  },
  "metadata": null,
  "title": "GitLab Groups API",
  "version": "1.0.0",
  "description": "This is a simple API for test",
  "endpoints": [
    {
      "name": "groups_get",
      "description": "Get a list of visible groups for the authenticated user. When accessed without authentication, only public groups are returned.",
      "path": "/groups",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "6 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.5\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_post",
      "description": "Creates a new project group. Available only for users who can create groups.",
      "path": "/groups",
      "method": "POST",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "3 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=1, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=2, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_get",
      "description": "Get all details of a group. This endpoint can be accessed without authentication if the group is publicly accessible.",
      "path": "/groups/{id}",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the groupowned by the authenticated user.",
            "type": "INTEGER"
          },
          "with_custom_attributes": {
            "description": "Includecustom attributesin response (admins only).",
            "type": "BOOLEAN"
          },
          "with_projects": {
            "description": "Include details from projects that belong to the specified group (defaults totrue). (Deprecated,scheduled for removal in API v5. To get the details of all projects within a group, use thelist a group\u2019s projects endpoint.)",
            "type": "BOOLEAN"
          }
        },
        "required": [
          "id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_put",
      "description": "Updates the project group. Only available to group owners and administrators.",
      "path": "/groups/{id}",
      "method": "PUT",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "3 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=1, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=2, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_delete",
      "description": "Removes group, and queues a background job to delete all projects in the group as well.",
      "path": "/groups/{id}",
      "method": "DELETE",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID of the group.",
            "type": "INTEGER"
          }
        },
        "required": [
          "id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_share_post",
      "description": "Share group with another group.",
      "path": "/groups/{id}/share",
      "method": "POST",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "5 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_share_group_id_delete",
      "description": "Unshare the group from another group. Returns 204 and no content on success.",
      "path": "/groups/{id}/share/{group_id}",
      "method": "DELETE",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the group",
            "type": "INTEGER"
          },
          "group_id": {
            "description": "The ID of the group to share with",
            "type": "INTEGER"
          }
        },
        "required": [
          "id",
          "group_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_subgroups_get",
      "description": "Get a list of visible direct subgroups in this group. When accessed without authentication, only public groups are returned.",
      "path": "/groups/{id}/subgroups",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "6 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.5\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_hooks_get",
      "description": "Get a list of group hooks",
      "path": "/groups/{id}/hooks",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the groupof the immediate parent group",
            "type": "INTEGER"
          }
        },
        "required": [
          "id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_hooks_post",
      "description": "Adds a hook to a specified group.",
      "path": "/groups/{id}/hooks",
      "method": "POST",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the group",
            "type": "INTEGER"
          },
          "url": {
            "description": "The hook URL",
            "type": "STRING"
          },
          "push_events": {
            "description": "Trigger hook on push events",
            "type": "BOOLEAN"
          },
          "issues_events": {
            "description": "Trigger hook on issues events",
            "type": "BOOLEAN"
          },
          "confidential_issues_events": {
            "description": "Trigger hook on confidential issues events",
            "type": "BOOLEAN"
          },
          "merge_requests_events": {
            "description": "Trigger hook on merge requests events",
            "type": "BOOLEAN"
          },
          "tag_push_events": {
            "description": "Trigger hook on tag push events",
            "type": "BOOLEAN"
          },
          "note_events": {
            "description": "Trigger hook on note events",
            "type": "BOOLEAN"
          },
          "confidential_note_events": {
            "description": "Trigger hook on confidential note events",
            "type": "BOOLEAN"
          },
          "job_events": {
            "description": "Trigger hook on job events",
            "type": "BOOLEAN"
          },
          "pipeline_events": {
            "description": "Trigger hook on pipeline events",
            "type": "BOOLEAN"
          },
          "wiki_page_events": {
            "description": "Trigger hook on wiki events",
            "type": "BOOLEAN"
          },
          "deployment_events": {
            "description": "Trigger hook on deployment events",
            "type": "BOOLEAN"
          },
          "releases_events": {
            "description": "Trigger hook on release events",
            "type": "BOOLEAN"
          },
          "enable_ssl_verification": {
            "description": "Do SSL verification when triggering the hook",
            "type": "BOOLEAN"
          },
          "token": {
            "description": "Secret token to validate received payloads; not returned in the response",
            "type": "STRING"
          }
        },
        "required": [
          "id",
          "url"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_hooks_hook_id_get",
      "description": "Get a list of group hooks",
      "path": "/groups/{id}/hooks/{hook_id}",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "hook_id": {
            "description": "The ID of a group hook",
            "type": "INTEGER"
          },
          "id": {
            "description": "The ID orURL-encoded path of the group",
            "type": "INTEGER"
          }
        },
        "required": [
          "hook_id",
          "id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_hooks_hook_id_put",
      "description": "Edits a hook for a specified group.",
      "path": "/groups/{id}/hooks/{hook_id}",
      "method": "PUT",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the group",
            "type": "INTEGER"
          },
          "hook_id": {
            "description": "The ID of the group hook",
            "type": "INTEGER"
          },
          "url": {
            "description": "The hook URL",
            "type": "STRING"
          },
          "push_events": {
            "description": "Trigger hook on push events",
            "type": "BOOLEAN"
          },
          "issues_events": {
            "description": "Trigger hook on issues events",
            "type": "BOOLEAN"
          },
          "confidential_issues_events": {
            "description": "Trigger hook on confidential issues events",
            "type": "BOOLEAN"
          },
          "merge_requests_events": {
            "description": "Trigger hook on merge requests events",
            "type": "BOOLEAN"
          },
          "tag_push_events": {
            "description": "Trigger hook on tag push events",
            "type": "BOOLEAN"
          },
          "note_events": {
            "description": "Trigger hook on note events",
            "type": "BOOLEAN"
          },
          "confidential_note_events": {
            "description": "Trigger hook on confidential note events",
            "type": "BOOLEAN"
          },
          "job_events": {
            "description": "Trigger hook on job events",
            "type": "BOOLEAN"
          },
          "pipeline_events": {
            "description": "Trigger hook on pipeline events",
            "type": "BOOLEAN"
          },
          "wiki_events": {
            "description": "Trigger hook on wiki events",
            "type": "BOOLEAN"
          },
          "deployment_events": {
            "description": "Trigger hook on deployment events",
            "type": "BOOLEAN"
          },
          "releases_events": {
            "description": "Trigger hook on release events",
            "type": "BOOLEAN"
          },
          "enable_ssl_verification": {
            "description": "Do SSL verification when triggering the hook",
            "type": "BOOLEAN"
          },
          "token": {
            "description": "Secret token to validate received payloads; not returned in the response",
            "type": "STRING"
          }
        },
        "required": [
          "id",
          "hook_id",
          "url"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_hooks_hook_id_delete",
      "description": "Removes a hook from a group. This is an idempotent method and can be called multiple times. Either the hook is available or not.",
      "path": "/groups/{id}/hooks/{hook_id}",
      "method": "DELETE",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the group",
            "type": "INTEGER"
          },
          "hook_id": {
            "description": "The ID of the group hook",
            "type": "INTEGER"
          }
        },
        "required": [
          "id",
          "hook_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_descendant_groups_get",
      "description": "Get a list of visible descendant groups of this group. When accessed without authentication, only public groups are returned.",
      "path": "/groups/{id}/descendant_groups",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "6 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.5\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_projects_get",
      "description": "Get a list of projects in this group. When accessed without authentication, only public projects are returned.",
      "path": "/groups/{id}/projects",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "6 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.5\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_projects_project_id_post",
      "description": "Transfer a project to the Group namespace",
      "path": "/groups/{id}/projects/{project_id}",
      "method": "POST",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "The ID orURL-encoded path of the target group",
            "type": "INTEGER"
          },
          "project_id": {
            "description": "The ID orURL-encoded path of the project",
            "type": "INTEGER"
          }
        },
        "required": [
          "id",
          "project_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "groups_id_projects_shared_get",
      "description": "Get a list of projects shared to this group. When accessed without authentication, only public shared projects are returned.",
      "path": "/groups/{id}/projects/shared",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "error": "6 validation errors for Schema\nenum.0\n  Input should be a valid string [type=string_type, input_value=0, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.1\n  Input should be a valid string [type=string_type, input_value=10, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.2\n  Input should be a valid string [type=string_type, input_value=20, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.3\n  Input should be a valid string [type=string_type, input_value=30, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.4\n  Input should be a valid string [type=string_type, input_value=40, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type\nenum.5\n  Input should be a valid string [type=string_type, input_value=50, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_type"
      },
      "output_schema": {}
    }
  ],
  "endpoint_count": 17,
  "servers": [
    "http://localhost:30000/api/v4"
  ]
}