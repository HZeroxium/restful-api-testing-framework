{
  "result": {
    "title": "Book Management API",
    "version": "1.0.0",
    "description": "A REST API for managing a collection of books"
  },
  "metadata": null,
  "title": "Book Management API",
  "version": "1.0.0",
  "description": "A REST API for managing a collection of books",
  "endpoints": [
    {
      "name": "auth_login_post",
      "description": "Exchange credentials for an access token",
      "path": "/auth/login",
      "method": "POST",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "username": {
            "type": "STRING"
          },
          "password": {
            "type": "STRING"
          }
        },
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_get",
      "description": "Returns a paginated list of books",
      "path": "/books",
      "method": "GET",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "page": {
            "description": "Page number for pagination",
            "minimum": 1.0,
            "type": "INTEGER"
          },
          "limit": {
            "description": "Number of items per page",
            "maximum": 100.0,
            "minimum": 1.0,
            "type": "INTEGER"
          },
          "genre": {
            "description": "Filter by book genre",
            "enum": [
              "fiction",
              "non-fiction",
              "science",
              "history",
              "biography",
              "fantasy",
              "romance",
              "thriller"
            ],
            "type": "STRING"
          }
        },
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_post",
      "description": "Adds a new book to the collection",
      "path": "/books",
      "method": "POST",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "id": {
            "description": "Unique identifier for the book",
            "type": "STRING"
          },
          "title": {
            "description": "Title of the book",
            "type": "STRING"
          },
          "author": {
            "description": "Author of the book",
            "type": "STRING"
          },
          "isbn": {
            "description": "ISBN-13 number for the book",
            "pattern": "^[0-9]{13}$",
            "type": "STRING"
          },
          "publication_year": {
            "description": "Year the book was published",
            "maximum": 9999.0,
            "minimum": 1000.0,
            "type": "INTEGER"
          },
          "genre": {
            "enum": [
              "fiction",
              "non-fiction",
              "science",
              "history",
              "biography",
              "fantasy",
              "romance",
              "thriller"
            ],
            "type": "STRING"
          },
          "description": {
            "description": "A brief summary of the book",
            "type": "STRING"
          },
          "price": {
            "description": "Price of the book",
            "minimum": 0.0,
            "type": "NUMBER"
          }
        },
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_book_id_get",
      "description": "Returns a single book by its ID",
      "path": "/books/{bookId}",
      "method": "GET",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "book_id": {
            "description": "ID of the book to retrieve",
            "type": "STRING"
          }
        },
        "required": [
          "book_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_book_id_put",
      "description": "Updates an existing book by its ID",
      "path": "/books/{bookId}",
      "method": "PUT",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "book_id": {
            "description": "ID of the book to update",
            "type": "STRING"
          },
          "id": {
            "description": "Unique identifier for the book",
            "type": "STRING"
          },
          "title": {
            "description": "Title of the book",
            "type": "STRING"
          },
          "author": {
            "description": "Author of the book",
            "type": "STRING"
          },
          "isbn": {
            "description": "ISBN-13 number for the book",
            "pattern": "^[0-9]{13}$",
            "type": "STRING"
          },
          "publication_year": {
            "description": "Year the book was published",
            "maximum": 9999.0,
            "minimum": 1000.0,
            "type": "INTEGER"
          },
          "genre": {
            "enum": [
              "fiction",
              "non-fiction",
              "science",
              "history",
              "biography",
              "fantasy",
              "romance",
              "thriller"
            ],
            "type": "STRING"
          },
          "description": {
            "description": "A brief summary of the book",
            "type": "STRING"
          },
          "price": {
            "description": "Price of the book",
            "minimum": 0.0,
            "type": "NUMBER"
          }
        },
        "required": [
          "book_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_book_id_delete",
      "description": "Deletes a book by its ID",
      "path": "/books/{bookId}",
      "method": "DELETE",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "book_id": {
            "description": "ID of the book to delete",
            "type": "STRING"
          }
        },
        "required": [
          "book_id"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "books_search_get",
      "description": "Search books by title, author or ISBN",
      "path": "/books/search",
      "method": "GET",
      "tags": [],
      "auth_required": true,
      "auth_type": null,
      "input_schema": {
        "properties": {
          "query": {
            "description": "Search term",
            "min_length": 3,
            "type": "STRING"
          },
          "page": {
            "description": "Page number for pagination",
            "minimum": 1.0,
            "type": "INTEGER"
          },
          "limit": {
            "description": "Number of items per page",
            "maximum": 100.0,
            "minimum": 1.0,
            "type": "INTEGER"
          }
        },
        "required": [
          "query"
        ],
        "type": "OBJECT"
      },
      "output_schema": {}
    },
    {
      "name": "health_get",
      "description": "Returns the current status of the API",
      "path": "/health",
      "method": "GET",
      "tags": [],
      "auth_required": false,
      "auth_type": null,
      "input_schema": {
        "type": "OBJECT"
      },
      "output_schema": {}
    }
  ],
  "endpoint_count": 8,
  "servers": [
    "https://api.bookservice.com/v1",
    "https://dev-api.bookservice.com/v1"
  ]
}